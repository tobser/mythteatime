#!/bin/sh 

prefix="/usr/local"
libdir_name="lib"
sysroot=""
ln_s="ln -sf"

cc="gcc"
qmake="qmake"

targetos=`uname -s`

if test x"$1" = x"-h" -o x"$1" = x"--help" ; then
cat << EOF

Usage:   configure [options]
Options: [defaults in brackets after descriptions]

Generic options:
  --prefix=PREFIX          MythTV install location PREFIX [$prefix]
  --sysroot=SYSROOT        MythTV sysroot location SYSROOT [$sysroot]
  --qmake=QMAKE            use specified qmake [$qmake]
  --libdir-name=LIBNAME    install/look for libs in PREFIX/LIBNAME [$libdir_name]
  --help                   print this message

EOF
exit 0
fi

CMDLINE_SET="
    qmake
    sysroot
"

for opt do
  optval="${opt#*=}"
  case "$opt" in
  --targetos=*) targetos=`echo $opt | cut -d '=' -f 2`
  ;;
  --prefix=*) prefix=`echo $opt | cut -d '=' -f 2`
  ;;
  --libdir-name=*) libdir_name=`echo $opt | cut -d '=' -f 2`;
  ;;
  *)
  optname="${opt%%=*}"
  optname="${optname#--}"
  optname=$(echo "$optname" | sed 's/-/_/g')
  if is_in $optname $CMDLINE_SET; then
      eval $optname='$optval'
  fi
  esac
done

is_qmake4(){
    $1 --version 2>&1 | egrep -q -e "Qt version 4\.[5-9]\.[0-9]"
}


# bring in mythtv config
if [ -e $prefix/include/mythtv/mythconfig.mak ] ; then
    rm mythconfig.mak 2> /dev/null
    ${ln_s} $prefix/include/mythtv/mythconfig.mak mythconfig.mak
else
    echo "ERROR: mythconfig.mak not found at $prefix/include/mythtv/mythconfig.mak"
    echo "Did you make AND install MythTV first?"
    echo "Are you using the correct prefix ($prefix)?"
    echo "Bailing out!!"
    exit
fi

#Set build env variables according to mythconfig.mak
LD=$(cat mythconfig.mak | grep -e "^LD=")
LD=${LD#LD=}
CC=$(cat mythconfig.mak | grep -e "^CC=")
CC=${CC#CC=}
CFLAGS=$(cat mythconfig.mak | grep -e "^CFLAGS=")
CFLAGS=${CFLAGS#CFLAGS=}
CPPFLAGS=$(cat mythconfig.mak | grep -e "^CPPFLAGS=")
CPPFLAGS=${CPPFLAGS#CPPFLAGS=}
LDFLAGS=$(cat mythconfig.mak | grep -e "^LDFLAGS=")
LDFLAGS=${LDFLAGS#LDFLAGS=}
CXX=$(cat mythconfig.mak | grep -e "^QMAKE_CXX=")
CXX=${CXX#QMAKE_CXX=}
ECXXFLAGS=$(cat mythconfig.mak | grep -e "^ECXXFLAGS=")
ECXXFLAGS=${ECXXFLAGS#ECXXFLAGS=}
CXXPPFLAGS=$(cat mythconfig.mak | grep -e "^CXXPPFLAGS=")
CXXPPFLAGS=${CXXPPFLAGS#CXXPPFLAGS=}
OPENGLV=$(cat mythconfig.mak | grep -e "^CONFIG_OPENGL_VIDEO=yes")

EXTRALIBS=$(cat mythconfig.mak | grep -e "^EXTRALIBS=")
EXTRALIBS=${EXTRALIBS#EXTRALIBS=}

if ! is_qmake4 $qmake; then
    is_qmake4 qmake-qt4 && qmake=qmake-qt4 || die "qmake for Qt4.6 or newer not found.\nPlease specify the correct qmake with --qmake="
fi

if ! expr $($qmake -query QT_VERSION) : "4\.[6-9]\.[0-9]" >/dev/null; then
    die "Qt4.6 or newer is required to build MythTV."
fi

${qmake} QMAKE=$(which ${qmake}) mythteatime.pro
